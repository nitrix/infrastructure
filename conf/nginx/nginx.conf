user  nginx;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
	# Use Docker DNS to resolve the hostnames, so that when the containers
	# boots out of order, nginx can still find them eventually.
	resolver 127.0.0.11 valid=10s;

	server {
		listen 80;
		server_name localhost;

		location / {
			proxy_set_header Host $host;
		
			# Using a variable for the hostname, so that we can still boot
			# if the hostname doesn't resolve.
			set $target hello;
			proxy_pass http://$target:8000;
		}
	}

	server {
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
		server_name localhost;

		ssl_certificate        /etc/nginx/ssl/$ssl_server_name.crt;
		ssl_certificate_key    /etc/nginx/ssl/$ssl_server_name.pem;

		location / {
			proxy_set_header Host $host;

			# Using a variable for the hostname, so that we can still boot
			# if the hostname doesn't resolve.
			set $target hello;
			proxy_pass http://$target:8000;
		}
	}
}